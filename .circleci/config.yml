version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 221acff4cc4d1f9be7619a657274c043999e62cc
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: 221acff4cc4d1f9be7619a657274c043999e62cc
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-4efc6b999f22c2117dd52d796786af51dd4d4d1f-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-00aac246fd625f14356db52ed98a657e40b02a82-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d.tar.gz
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-670845158e5231aa2b5c48603a20853d48f68ef2-{{checksum ".buildcache/cache-keys/package-670845158e5231aa2b5c48603a20853d48f68ef2"}}
          name: Restore package cache
      - restore_cache:
          key: package-fb26f9037b4f9b89f09d316f49c0db87693b022d-{{checksum ".buildcache/cache-keys/package-fb26f9037b4f9b89f09d316f49c0db87693b022d"}}
          name: Restore package cache
      - restore_cache:
          key: package-23be03371735b06dbd1a733f70df38c32b6b3988-{{checksum ".buildcache/cache-keys/package-23be03371735b06dbd1a733f70df38c32b6b3988"}}
          name: Restore package cache
      - restore_cache:
          key: package-88972f670dbb74817cbd87143dc6da3fe0cf09a4-{{checksum ".buildcache/cache-keys/package-88972f670dbb74817cbd87143dc6da3fe0cf09a4"}}
          name: Restore package cache
      - restore_cache:
          key: package-7f15ab74610641e4bd377e450ae65889e3a8d969-{{checksum ".buildcache/cache-keys/package-7f15ab74610641e4bd377e450ae65889e3a8d969"}}
          name: Restore package cache
      - restore_cache:
          key: package-d2ffa38033819b30c6b8657add046e00f4631a14-{{checksum ".buildcache/cache-keys/package-d2ffa38033819b30c6b8657add046e00f4631a14"}}
          name: Restore package cache
      - restore_cache:
          key: package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8-{{checksum ".buildcache/cache-keys/package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8"}}
          name: Restore package cache
      - restore_cache:
          key: package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e-{{checksum ".buildcache/cache-keys/package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e"}}
          name: Restore package cache
      - restore_cache:
          key: package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70-{{checksum ".buildcache/cache-keys/package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70"}}
          name: Restore package cache
      - restore_cache:
          key: package-06451f1395595bf541733bc0fa43b5f8d4c1f871-{{checksum ".buildcache/cache-keys/package-06451f1395595bf541733bc0fa43b5f8d4c1f871"}}
          name: Restore package cache
      - restore_cache:
          key: package-54bddba68a649c667f80b520f21ef9a9b7ef3698-{{checksum ".buildcache/cache-keys/package-54bddba68a649c667f80b520f21ef9a9b7ef3698"}}
          name: Restore package cache
      - restore_cache:
          key: package-afa42f0d1945248381022b8fec2a00aba89845bc-{{checksum ".buildcache/cache-keys/package-afa42f0d1945248381022b8fec2a00aba89845bc"}}
          name: Restore package cache
      - restore_cache:
          key: package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1-{{checksum ".buildcache/cache-keys/package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1"}}
          name: Restore package cache
      - restore_cache:
          key: package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f-{{checksum ".buildcache/cache-keys/package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f"}}
          name: Restore package cache
      - restore_cache:
          key: package-5c9d7d2650823a71d79844cc79ad18993c591691-{{checksum ".buildcache/cache-keys/package-5c9d7d2650823a71d79844cc79ad18993c591691"}}
          name: Restore package cache
      - restore_cache:
          key: package-e397af2a56134e2c431d1f1b58260699c331e020-{{checksum ".buildcache/cache-keys/package-e397af2a56134e2c431d1f1b58260699c331e020"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.tar.gz .buildcache/packages lockfile-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.tar.gz .buildcache/packages/store/*.json lockfile-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.yml
      - store_artifacts:
          path: packages-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.tar.gz
      - store_artifacts:
          path: meta-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324.tar.gz
      - run:
          command: mv ".buildcache/packages" "packages-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324"
          name: Update Custom Build Paths
      - store_artifacts:
          path: packages-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-670845158e5231aa2b5c48603a20853d48f68ef2-{{checksum ".buildcache/cache-keys/package-670845158e5231aa2b5c48603a20853d48f68ef2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-670845158e5231aa2b5c48603a20853d48f68ef2-{{checksum ".buildcache/cache-keys/package-670845158e5231aa2b5c48603a20853d48f68ef2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 670845158e5231aa2b5c48603a20853d48f68ef2
  darwin_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fb26f9037b4f9b89f09d316f49c0db87693b022d-{{checksum ".buildcache/cache-keys/package-fb26f9037b4f9b89f09d316f49c0db87693b022d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fb26f9037b4f9b89f09d316f49c0db87693b022d-{{checksum ".buildcache/cache-keys/package-fb26f9037b4f9b89f09d316f49c0db87693b022d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fb26f9037b4f9b89f09d316f49c0db87693b022d
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-23be03371735b06dbd1a733f70df38c32b6b3988-{{checksum ".buildcache/cache-keys/package-23be03371735b06dbd1a733f70df38c32b6b3988"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-23be03371735b06dbd1a733f70df38c32b6b3988-{{checksum ".buildcache/cache-keys/package-23be03371735b06dbd1a733f70df38c32b6b3988"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 23be03371735b06dbd1a733f70df38c32b6b3988
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-88972f670dbb74817cbd87143dc6da3fe0cf09a4-{{checksum ".buildcache/cache-keys/package-88972f670dbb74817cbd87143dc6da3fe0cf09a4"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-88972f670dbb74817cbd87143dc6da3fe0cf09a4-{{checksum ".buildcache/cache-keys/package-88972f670dbb74817cbd87143dc6da3fe0cf09a4"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 88972f670dbb74817cbd87143dc6da3fe0cf09a4
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-7f15ab74610641e4bd377e450ae65889e3a8d969-{{checksum ".buildcache/cache-keys/package-7f15ab74610641e4bd377e450ae65889e3a8d969"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-7f15ab74610641e4bd377e450ae65889e3a8d969-{{checksum ".buildcache/cache-keys/package-7f15ab74610641e4bd377e450ae65889e3a8d969"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 7f15ab74610641e4bd377e450ae65889e3a8d969
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d2ffa38033819b30c6b8657add046e00f4631a14-{{checksum ".buildcache/cache-keys/package-d2ffa38033819b30c6b8657add046e00f4631a14"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d2ffa38033819b30c6b8657add046e00f4631a14-{{checksum ".buildcache/cache-keys/package-d2ffa38033819b30c6b8657add046e00f4631a14"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d2ffa38033819b30c6b8657add046e00f4631a14
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8-{{checksum ".buildcache/cache-keys/package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8-{{checksum ".buildcache/cache-keys/package-2d94fc6b9b9e25190a72e6334afb3d36a03d19a8"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2d94fc6b9b9e25190a72e6334afb3d36a03d19a8
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e-{{checksum ".buildcache/cache-keys/package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e-{{checksum ".buildcache/cache-keys/package-5270b71f640c6dcd61a271e988a2081bf5bfbb3e"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5270b71f640c6dcd61a271e988a2081bf5bfbb3e
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70-{{checksum ".buildcache/cache-keys/package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70-{{checksum ".buildcache/cache-keys/package-5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5fcc03d5f76f38b0ac8b3eeb5eec6e0dda9c6c70
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-06451f1395595bf541733bc0fa43b5f8d4c1f871-{{checksum ".buildcache/cache-keys/package-06451f1395595bf541733bc0fa43b5f8d4c1f871"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-06451f1395595bf541733bc0fa43b5f8d4c1f871-{{checksum ".buildcache/cache-keys/package-06451f1395595bf541733bc0fa43b5f8d4c1f871"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 06451f1395595bf541733bc0fa43b5f8d4c1f871
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-54bddba68a649c667f80b520f21ef9a9b7ef3698-{{checksum ".buildcache/cache-keys/package-54bddba68a649c667f80b520f21ef9a9b7ef3698"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-54bddba68a649c667f80b520f21ef9a9b7ef3698-{{checksum ".buildcache/cache-keys/package-54bddba68a649c667f80b520f21ef9a9b7ef3698"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 54bddba68a649c667f80b520f21ef9a9b7ef3698
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-afa42f0d1945248381022b8fec2a00aba89845bc-{{checksum ".buildcache/cache-keys/package-afa42f0d1945248381022b8fec2a00aba89845bc"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-afa42f0d1945248381022b8fec2a00aba89845bc-{{checksum ".buildcache/cache-keys/package-afa42f0d1945248381022b8fec2a00aba89845bc"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: afa42f0d1945248381022b8fec2a00aba89845bc
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1-{{checksum ".buildcache/cache-keys/package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1-{{checksum ".buildcache/cache-keys/package-eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: eff2b1d9db1cff4f0bf41855c2e85fd5e97b59b1
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f-{{checksum ".buildcache/cache-keys/package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f-{{checksum ".buildcache/cache-keys/package-51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 51e5a2cf2270e920dfcb0f04cb0029d6199c1d1f
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5c9d7d2650823a71d79844cc79ad18993c591691-{{checksum ".buildcache/cache-keys/package-5c9d7d2650823a71d79844cc79ad18993c591691"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5c9d7d2650823a71d79844cc79ad18993c591691-{{checksum ".buildcache/cache-keys/package-5c9d7d2650823a71d79844cc79ad18993c591691"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5c9d7d2650823a71d79844cc79ad18993c591691
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-e397af2a56134e2c431d1f1b58260699c331e020-{{checksum ".buildcache/cache-keys/package-e397af2a56134e2c431d1f1b58260699c331e020"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_2180_{{checksum ".buildcache/cache-keys/copy-source-218031bf58e9e3b8f7f4f78be9a1bdf3caee4d0d"}}
          keys:
            - go-modules_3b7f_{{checksum ".buildcache/cache-keys/go-modules-3b7f0b7915342371f9c6fbcb2eb65e75b9fc7445"}}
            - ui_00aa_{{checksum ".buildcache/cache-keys/ui-00aac246fd625f14356db52ed98a657e40b02a82"}}
            - base_4efc_{{checksum ".buildcache/cache-keys/base-4efc6b999f22c2117dd52d796786af51dd4d4d1f"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-e397af2a56134e2c431d1f1b58260699c331e020-{{checksum ".buildcache/cache-keys/package-e397af2a56134e2c431d1f1b58260699c331e020"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: e397af2a56134e2c431d1f1b58260699c331e020
workflows:
  build-221acff4cc4d1f9be7619a657274c043999e62cc-1b19018ddbcec324:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - darwin_arm64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - darwin_arm64_package:
          requires:
            - build-common-layers
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
